<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<!--
Program D HTML Responder Configuration
===============================================================
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 
02111-1307, USA.
-->

<!--
GENERAL NOTES

1. Configuration options are grouped for easy maintenance.
2. Unless otherwise noted, commenting out a property will
   cause the engine's default value to be used.
3. A property may only be defined once.
4. The notations in [square brackets] are used to generate
   the Settings class that corresponds with this properties
   file.  Please do not change these notations unless you
   know what you are doing.
-->

<properties version="1.0">
    <!--[generate: org.aitools.programd.responder.HTMLResponderSettings]
        [strip-prefix: programd.responder.html.]-->
    
    <!-- The html templates directory (relative to programd.home). [String: templates/html]-->
    <entry key="programd.responder.html.template.directory">templates/html</entry>
    
    <!-- The default chat template name.  [String: chat]
         * Note: Any other *.html, *.htm or *.data files in
           programd.responder.flash.template.directory will also be available if
           you specify a template name (without suffixes) parameter in the user request.-->
    <entry key="programd.responder.html.chat.default-template.name">chat</entry>
    
    <!-- Use user authentication? [boolean: true]-->
    <entry key="programd.responder.html.use-user-authentication">true</entry>
    
    <!-- The registration form. [String: register.html]-->
    <entry key="programd.responder.html.register.form.path">register.html</entry>
    
    <!-- The login form. [String: login.html]-->
    <entry key="programd.responder.html.login.form.path">login.html</entry>
    
    <!-- The change password form. [String: change-password.html]-->
    <entry key="programd.responder.html.change-password.form.path">change-password.html</entry>

    <!-- The access denied page. [String: access-denied.html]-->
    <entry key="programd.responder.html.access-denied.page.path">access-denied.html</entry>

    <!-- The login success page. [String: login-success.html]-->
    <entry key="programd.responder.html.login-success.page.path">login-success.html</entry>

    <!-- The login failed page. [String: login-failed.html]-->
    <entry key="programd.responder.html.login-failed.page.path">login-failed.html</entry>

    <!-- The logout success page. [String: logout-success.html]-->
    <entry key="programd.responder.html.logout-success.page.path">logout-success.html</entry>

    <!-- The password change succeeded page. [String: password-change-succeeded.html]-->
    <entry key="programd.responder.html.password-change-succeeded.page.path">password-change-succeeded.html</entry>

    <!-- The old password invalid page. [String: old-password-invalid.html]-->
    <entry key="programd.responder.html.old-password-invalid.page.path">old-password-invalid.html</entry>

    <!-- The username format invalid page. [String: username-format-invalid.html]-->
    <entry key="programd.responder.html.username-format-invalid.page.path">username-format-invalid.html</entry>

    <!-- The password format invalid page. [String: password-format-invalid.html]-->
    <entry key="programd.responder.html.password-format-invalid.page.path">password-format-invalid.html</entry>

    <!-- The password not confirmed page. [String: password-not-confirmed.html]-->
    <entry key="programd.responder.html.password-not-confirmed.page.path">password-not-confirmed.html</entry>

    <!-- The registration succeeded page. [String: registration-succeeded.html]-->
    <entry key="programd.responder.html.registration-succeeded.page.path">registration-succeeded.html</entry>

    <!-- Whether to enable authentication via the HTMLResponder [boolean: true]-->
    <entry key="programd.responder.html.authenticate">true</entry>
    
    <!-- Whether to automatically generate a cookie for an unknown user [boolean: true]
         * Only applicable if programd.httpserver.authenticate == true-->
    <entry key="programd.responder.html.autocookie">true</entry>

</properties>